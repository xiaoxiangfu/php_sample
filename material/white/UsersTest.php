<?php
namespace Instaphp\Instagram;
include_once 'InstagramTest.php';
/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.0 on 2013-01-22 at 10:28:11.
 * @ignore
 */
class UsersTest extends InstagramTest
{
    /**
     * @var Users
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new Users($this->config);
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    /**
     * @covers Instaphp\Instagram\Users::FindId
     */
    public function testFindId()
    {
        $res = $this->object->FindId('sesser');
		$this->assertEquals(5830, $res);

    }

    /**
     * @covers Instaphp\Instagram\Users::Info
     */
    public function testInfo()
    {
		$res = $this->object->Info(3740103);
		$this->assertEquals(200, $res->meta['code']);
		$this->assertEquals('bowkylion', $res->data['username']);
    }

    /**
     * @covers Instaphp\Instagram\Users::Recent
     */
    public function testRecent()
    {
		$this->object->SetAccessToken(TEST_ACCESS_TOKEN);
		$res = $this->object->Recent(5830, ["count" => 5]);
		$this->assertNotEmpty($res->data);
		$this->assertEquals(200, $res->meta['code']);
		$this->assertEquals(5, count($res->data));
    }

	/**
	 * @covers Instaphp\Instagram\Users::Liked
	 * @expectedException \Instaphp\Exceptions\OAuthParameterException
	 */
	public function testLikedException()
	{
        if(TEST_LIKES === false) {
            $this->markTestSkipped('Likes not tested');
        }
		$res = $this->object->Liked();
	}

    /**
     * @covers Instaphp\Instagram\Users::Liked
     */
    public function testLiked()
    {
        if(TEST_LIKES === false) {
            $this->markTestSkipped('Likes not tested');
        }
		$this->object->SetAccessToken(TEST_ACCESS_TOKEN);
		$res = $this->object->Liked(["count" => 1]);
		$this->assertNotEmpty($res->data);
		$this->assertEquals(200, $res->meta['code']);
		$this->assertEquals(1, count($res->data));
    }

    /**
     * @covers Instaphp\Instagram\Users::Search
     * @todo   Implement testSearch().
     */
    public function testSearch()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Instaphp\Instagram\Users::Follows
     * @todo   Implement testFollows().
     */
    public function testFollows()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Instaphp\Instagram\Users::FollowedBy
     * @todo   Implement testFollowedBy().
     */
    public function testFollowedBy()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Instaphp\Instagram\Users::Requests
     * @todo   Implement testRequests().
     */
    public function testRequests()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Instaphp\Instagram\Users::Relationship
     * @todo   Implement testRelationship().
     */
    public function testRelationship()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Instaphp\Instagram\Users::Follow
     * @todo   Implement testFollow().
     */
    public function testFollow()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Instaphp\Instagram\Users::Unfollow
     * @todo   Implement testUnfollow().
     */
    public function testUnfollow()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Instaphp\Instagram\Users::Block
     * @todo   Implement testBlock().
     */
    public function testBlock()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Instaphp\Instagram\Users::Unblock
     * @todo   Implement testUnblock().
     */
    public function testUnblock()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Instaphp\Instagram\Users::Approve
     * @todo   Implement testApprove().
     */
    public function testApprove()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Instaphp\Instagram\Users::Deny
     * @todo   Implement testDeny().
     */
    public function testDeny()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }
}
